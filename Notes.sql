CREATE TABLE STUDENTE(
    MATR INTEGER PRIMARY KEY, --VINCOLO DI COLONNA, NON SERVE NOT NULL (LO E PER DEFINIZIONE PRIMARY KEY)
    NOME VARCHAR(10) NOT NULL,
    MAIL VARCHAR(20)
)

INSERT INTO STUDENTE VALUES(1, 'LAURA PO', 'LAURAPO@MAIL.IT');
INSERT INTO STUDENTE VALUES(2, 'L. BASSI', NULL);

SELECT * FROM STUDENTE

INSERT INTO STUDENTE VALUES(2, 'D.VERDE', NULL);

CREATE TABLE DOCENTE(
    CF VARCHAR(16) PRIMARY KEY,
    NOME VARCHAR(10) NOT NULL
)

INSERT INTO DOCENTE VALUES('CF1','BIANCHI L.');
INSERT INTO DOCENTE VALUES('CF2','LAURA PO');

CREATE TABLE CORSO(
    CODICE INT PRIMARY KEY,
    DENOMINAZIONE VARCHAR(10) NOT NULL,
    CFDOCENTE VARCHAR(16) REFERENCES DOCENTE
)

INSERT INTO CORSO VALUES(100, 'FISICA1', 'CF2')
INSERT INTO CORSO VALUES(101, 'FISICA2', 'CF2')

INSERT INTO CORSO VALUES(102, 'GEOMETRIA', NULL)

SELECT * FROM CORSO

CREATE TABLE CORSO_1(
    CODICE INT PRIMARY KEY,
    DENOMINAZIONE VARCHAR(10) NOT NULL,
    CFDOCENTE VARCHAR(16) REFERENCES DOCENTE NOT NULL
)

INSERT INTO CORSO_1 VALUES(102, 'GEOMETRIA', NULL)

CREATE TABLE ESAME(
    MATRICOLA INTEGER REFERENCES STUDENTE,
    CODICECORSO INTEGER REFERENCES CORSO,
    VOTO INTEGER NOT NULL,
    PRIMARY KEY (MATRICOLA, CODICECORSO)
)

INSERT INTO ESAME VALUES(1, 100, 30)

INSERT INTO ESAME VALUES(1, 101, 30)

INSERT INTO ESAME VALUES(1, 201, 30)

/*
    ESEMPIO DI ASSOCIAZIONE UNO-A-UNO
    TRA STUDENTE E CORSO: RAPPRESENTANTE
    UN CORSO HA UNO ED UN SOLO STUDENTE RAPPRESENTANTE
    UNO STUDENTE PUO ESSERE RAPPRESENTANTE DI UN SOLO CORSO

    INGLOBIAMO IN STUDENTE

*/

CREATE TABLE STUDENTE_1(
    MATR INTEGER PRIMARY KEY, --VINCOLO DI COLONNA, NON SERVE NOT NULL (LO E PER DEFINIZIONE PRIMARY KEY)
    NOME VARCHAR(10) NOT NULL,
    MAIL VARCHAR(20),
    CODICECORSO INTEGER REFERENCES CORSO UNIQUE --NON CI VUOLE NOT NULL, MIN-CARD(STUDENTE,RAPPRESENTANTE)=0
    --IN ALTERNATIVA UNIQUE(CODICECORSO)
)

/*
    IN ALTERNATIVA INGLOBIAMO IN CORSO
*/

CREATE TABLE CORSO_2(
    CODICE INT PRIMARY KEY,
    DENOMINAZIONE VARCHAR(10) NOT NULL,
    CFDOCENTE VARCHAR(16) REFERENCES DOCENTE NOT NULL,
    MATRICOLARAPPRESENTANTE INT REFERENCES STUDENTE NOT NULL UNIQUE --NON C'E SINTASSI SPECIFICA AK, DOBBIAMO METTERE COPPIA NOT NULL-UNIQUE
)


-------------------------------------


CREATE TABLE PERSONA10(
    NOME VARCHAR(50),
    COGNOME VARCHAR(50)
);

CREATE TABLE PERSONA20(
    NOME VARCHAR(50),
    COGNOME VARCHAR(50)
);

CREATE TABLE PERSONA30(
    NOME VARCHAR(50),
    COGNOME VARCHAR(50)
);

/*
    CON DROP TABLE CANCELLO TABELLA
*/

DROP TABLE PERSONA20

/*
    PER ESEGUIRE ISTRUZIONI SEPARATAMENTE SI USA 
    KEYWORD GO
*/

/*
    PER COMMENTARE SU UNA SOLA RIGA
    --COMMENTO
*/

/*
    CHAR(N) STRINGA FISSA DI N CARATTERI (AUTOCOMPLETAMENTO SE PASSO MENO CARATTERI)
    VARCHAR(N) STRINGA VARIABILE DI MAX N CARATTERI
*/

/*
    SI POSSONO INSERIRE RIGHE IN UNA SOLA TABELLA PER VOLTA
*/
INSERT INTO PERSONA VALUES('LAURA', 'PO');

INSERT INTO PERSONA(COGNOME) VALUES('ROSSI');

INSERT INTO PERSONA(COGNOME) VALUES('VERDE');

SELECT * FROM PERSONA

TRUNCATE TABLE PERSONA

DELETE FROM PERSONA


--------------------------------


CREATE TABLE PERSONA(
    CF VARCHAR(20) PRIMARY KEY,
    NOME VARCHAR(50) NOT NULL,
    COGNOME VARCHAR(50) NOT NULL,
    UNIQUE (NOME, COGNOME) --IMPORTANTE ORDINE (NON POSSO RIFERIRMI A PERSONA INVERTENDO COGNOME E NOME) QUANDO SI CREA CHIAVE ALTERNATIVA
) --CHIAVE ALTERNATIVA SI DEFINISCE CON NOT NULL + UNIQUE

CREATE TABLE TELEGFONI(
    NOME_CONTATTO VARCHAR(50),
    COGNOME VARCHAR(50),
    TELEFONO VARCHAR(10),
    PRIMARY KEY (NOME_CONTATTO, COGNOME, TELEFONO),
    FOREIGN KEY (NOME_CONTATTO, COGNOME) REFERENCES PERSONA(NOME, COGNOME)
)


--------------------------------


